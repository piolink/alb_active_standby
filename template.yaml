Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: '2010-09-09'
Description: Template of Active-Standby ALB by PIOLINK
Metadata:
  AWS::ServerlessRepo::Application:
    Name: alb-active-standby
    Description: |
      AWS serverless implemention of ALB active standby which is composed of
      - CloudWatch Alarm for checking healty LB target host
      - SNS for notification of CloudWatch alarm trigger
      - Lambda for modifiying the weight of LB rule
    Author: PIOLINK
    SpdxLicenseId: MIT
    LicenseUrl: LICENSE.txt
    ReadmeUrl: README.md
    Labels: [alb, ha, active_standby]
    HomePageUrl: https://github.com/piolink/alb_active_standby
    SemanticVersion: 1.0.4
    SourceCodeUrl: https://github.com/piolink/alb_active_standby
Parameters:
  LoadBalancerName:
    Type: String
    Default: ''
    Description: Enter your existing load balancer name. e.g app/lbname/d665cae1604417d
  LBListenerArn:
    Type: String
    Default: ''
    Description: Enter your existing LB Listerner ARN. e.g.arn:aws:elasticloadbalancing:ap-northeast-2:1111:listener/app/lb/22222/333333
  TargetGroupARNActive:
    Type: String
    Default: ''
    Description: Enter your existing ACTIVE target group ARN. e.g.arn:aws:elasticloadbalancing:ap-northeast-2:1111:targetgroup/my-tg/aaaaa
  TargetGroupARNBackup:
    Type: String
    Default: ''
    Description: Enter your existing Backup target group ARN. e.g.arn:aws:elasticloadbalancing:ap-northeast-2:1111:targetgroup/my-tg/bbbbb
  CloudWatchAlarmName:
    Type: String
    Default: ''
    Description: Enter a new CloudWatch Alarm name that you want to create for monitoring LB target 
  Email:
    Type: String
    Description: Enter a Email address to be notified when the CloudWatch alarm is triggered
Resources:
  AlarmNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref 'Email'
          Protocol: email
  AlarmTriggerTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !GetAtt 'LambdaFunction.Arn'
          Protocol: lambda
  LBNotifyActiveALive:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join [ '', [ !Ref 'CloudWatchAlarmName', '-alive' ] ]
      AlarmDescription: Alarms when ACTIVE LB target is alive 
      AlarmActions:
        - !Ref 'AlarmTriggerTopic'
      MetricName: HealthyHostCount
      Namespace: AWS/ApplicationELB
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 3
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref 'LoadBalancerName'
        - Name: TargetGroup
          Value: !Select [ '5', !Split [':', !Ref 'TargetGroupARNActive']] 
      EvaluationPeriods: 3
      Period: 60
      Statistic: Maximum
      Threshold: 1
  LBNotifyActiveDead:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Join [ '', [ !Ref 'CloudWatchAlarmName', '-dead' ] ]
      AlarmDescription: Alarms when ACTIVE LB target is dead
      AlarmActions:
        - !Ref 'AlarmTriggerTopic'
      MetricName: HealthyHostCount
      Namespace: AWS/ApplicationELB
      ComparisonOperator: LessThanThreshold
      DatapointsToAlarm: 1
      Dimensions:
        - Name: LoadBalancer
          Value: !Ref 'LoadBalancerName'
        - Name: TargetGroup
          Value: !Select [ '5', !Split [':', !Ref 'TargetGroupARNActive']] 
      EvaluationPeriods: 1
      Period: 60
      Statistic: Maximum
      Threshold: 1
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Handle the state change event of ALB Active Standby 
      CodeUri: lambda/
      Handler: alb_active_standby.lambda_handler
      VpcConfig:
        SecurityGroupIds: []
        SubnetIds: [] 
      Runtime: python3.8
      Timeout: 30
      Events:
        SNSAlarmTrigger:
          Type: SNS
          Properties:
            Topic: !Ref 'AlarmTriggerTopic'
      Environment:
        Variables:
          SNS_TOPIC: !Ref 'AlarmNotificationTopic'
          TARGETGROUP_ARN_ACTIVE: !Ref 'TargetGroupARNActive'
          TARGETGROUP_ARN_BACKUP: !Ref 'TargetGroupARNBackup'
          ALARM_NAME: !Ref 'CloudWatchAlarmName'
          LB_LISTENER_ARN: !Ref 'LBListenerArn'
      Policies:
        - Statement:
          - Sid: LambdaLogging
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
          - Sid: SNS
            Effect: Allow
            Action:
              - sns:Publish
            Resource: '*'
          - Sid: ELB
            Effect: Allow
            Action:
              - elasticloadbalancing:Describe*
              - elasticloadbalancing:ModifyListener
            Resource: '*'